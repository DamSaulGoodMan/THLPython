
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocEQUALITYNON_EQUALITYLESSTHANGREATERTHANLESSTHAN_AND_EQUALITYGREATERTHAN_AND_EQUALITYleftPLUSMINUSleftTIMESDIVIDErightUMINUSDIVIDE ELSE EQUAL EQUALITY GREATERTHAN GREATERTHAN_AND_EQUALITY IF LBRACKET LESSTHAN LESSTHAN_AND_EQUALITY LPAREN MINUS NAME NON_EQUALITY NUMBER PLUS RBRACKET RPAREN SEMICOLON TIMESbloc : bloc statement\n            | statement body : LBRACKET bloc RBRACKETstatement : IF expression body\n                 | IF expression body ELSE body\n                 | IF expression body ELSE statementstatement : NAME EQUAL expression SEMICOLONstatement : expression SEMICOLONexpression : expression EQUALITY expression\n                  | expression NON_EQUALITY expression\n                  | expression LESSTHAN expression\n                  | expression GREATERTHAN expression\n                  | expression LESSTHAN_AND_EQUALITY expression\n                  | expression GREATERTHAN_AND_EQUALITY expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : NUMBERexpression : NAME'
    
_lr_action_items = {'IF':([0,1,2,9,12,26,27,40,41,42,43,44,45,],[3,3,-2,-1,-8,-4,3,3,3,-7,-5,-6,-3,]),'NAME':([0,1,2,3,6,7,9,12,13,14,15,16,17,18,19,20,21,22,23,26,27,40,41,42,43,44,45,],[5,5,-2,11,11,11,-1,-8,11,11,11,11,11,11,11,11,11,11,11,-4,5,5,5,-7,-5,-6,-3,]),'MINUS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,],[6,6,-2,6,20,-22,6,6,-21,-1,20,-22,-8,6,6,6,6,6,6,6,6,6,6,6,-19,20,-4,6,20,20,20,20,20,20,-15,-16,-17,-18,20,-20,6,6,-7,-5,-6,-3,]),'LPAREN':([0,1,2,3,6,7,9,12,13,14,15,16,17,18,19,20,21,22,23,26,27,40,41,42,43,44,45,],[7,7,-2,7,7,7,-1,-8,7,7,7,7,7,7,7,7,7,7,7,-4,7,7,7,-7,-5,-6,-3,]),'NUMBER':([0,1,2,3,6,7,9,12,13,14,15,16,17,18,19,20,21,22,23,26,27,40,41,42,43,44,45,],[8,8,-2,8,8,8,-1,-8,8,8,8,8,8,8,8,8,8,8,8,-4,8,8,8,-7,-5,-6,-3,]),'$end':([1,2,9,12,26,42,43,44,45,],[0,-2,-1,-8,-4,-7,-5,-6,-3,]),'RBRACKET':([2,9,12,26,41,42,43,44,45,],[-2,-1,-8,-4,45,-7,-5,-6,-3,]),'SEMICOLON':([4,5,8,11,24,28,29,30,31,32,33,34,35,36,37,38,39,],[12,-22,-21,-22,-19,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,42,-20,]),'EQUALITY':([4,5,8,10,11,24,25,28,29,30,31,32,33,34,35,36,37,38,39,],[13,-22,-21,13,-22,-19,13,None,None,None,None,None,None,-15,-16,-17,-18,13,-20,]),'NON_EQUALITY':([4,5,8,10,11,24,25,28,29,30,31,32,33,34,35,36,37,38,39,],[14,-22,-21,14,-22,-19,14,None,None,None,None,None,None,-15,-16,-17,-18,14,-20,]),'LESSTHAN':([4,5,8,10,11,24,25,28,29,30,31,32,33,34,35,36,37,38,39,],[15,-22,-21,15,-22,-19,15,None,None,None,None,None,None,-15,-16,-17,-18,15,-20,]),'GREATERTHAN':([4,5,8,10,11,24,25,28,29,30,31,32,33,34,35,36,37,38,39,],[16,-22,-21,16,-22,-19,16,None,None,None,None,None,None,-15,-16,-17,-18,16,-20,]),'LESSTHAN_AND_EQUALITY':([4,5,8,10,11,24,25,28,29,30,31,32,33,34,35,36,37,38,39,],[17,-22,-21,17,-22,-19,17,None,None,None,None,None,None,-15,-16,-17,-18,17,-20,]),'GREATERTHAN_AND_EQUALITY':([4,5,8,10,11,24,25,28,29,30,31,32,33,34,35,36,37,38,39,],[18,-22,-21,18,-22,-19,18,None,None,None,None,None,None,-15,-16,-17,-18,18,-20,]),'PLUS':([4,5,8,10,11,24,25,28,29,30,31,32,33,34,35,36,37,38,39,],[19,-22,-21,19,-22,-19,19,19,19,19,19,19,19,-15,-16,-17,-18,19,-20,]),'TIMES':([4,5,8,10,11,24,25,28,29,30,31,32,33,34,35,36,37,38,39,],[21,-22,-21,21,-22,-19,21,21,21,21,21,21,21,21,21,-17,-18,21,-20,]),'DIVIDE':([4,5,8,10,11,24,25,28,29,30,31,32,33,34,35,36,37,38,39,],[22,-22,-21,22,-22,-19,22,22,22,22,22,22,22,22,22,-17,-18,22,-20,]),'EQUAL':([5,],[23,]),'LBRACKET':([8,10,11,24,28,29,30,31,32,33,34,35,36,37,39,40,],[-21,27,-22,-19,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-20,27,]),'RPAREN':([8,11,24,25,28,29,30,31,32,33,34,35,36,37,39,],[-21,-22,-19,39,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-20,]),'ELSE':([26,45,],[40,-3,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'bloc':([0,27,],[1,41,]),'statement':([0,1,27,40,41,],[2,9,2,44,9,]),'expression':([0,1,3,6,7,13,14,15,16,17,18,19,20,21,22,23,27,40,41,],[4,4,10,24,25,28,29,30,31,32,33,34,35,36,37,38,4,4,4,]),'body':([10,40,],[26,43,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> bloc","S'",1,None,None,None),
  ('bloc -> bloc statement','bloc',2,'p_bloc','interpreterLanguageLatin.py',106),
  ('bloc -> statement','bloc',1,'p_bloc','interpreterLanguageLatin.py',107),
  ('body -> LBRACKET bloc RBRACKET','body',3,'p_body','interpreterLanguageLatin.py',118),
  ('statement -> IF expression body','statement',3,'p_statement_condition','interpreterLanguageLatin.py',127),
  ('statement -> IF expression body ELSE body','statement',5,'p_statement_condition','interpreterLanguageLatin.py',128),
  ('statement -> IF expression body ELSE statement','statement',5,'p_statement_condition','interpreterLanguageLatin.py',129),
  ('statement -> NAME EQUAL expression SEMICOLON','statement',4,'p_statement_assign','interpreterLanguageLatin.py',138),
  ('statement -> expression SEMICOLON','statement',2,'p_statement_expr','interpreterLanguageLatin.py',145),
  ('expression -> expression EQUALITY expression','expression',3,'p_expression_bool','interpreterLanguageLatin.py',152),
  ('expression -> expression NON_EQUALITY expression','expression',3,'p_expression_bool','interpreterLanguageLatin.py',153),
  ('expression -> expression LESSTHAN expression','expression',3,'p_expression_bool','interpreterLanguageLatin.py',154),
  ('expression -> expression GREATERTHAN expression','expression',3,'p_expression_bool','interpreterLanguageLatin.py',155),
  ('expression -> expression LESSTHAN_AND_EQUALITY expression','expression',3,'p_expression_bool','interpreterLanguageLatin.py',156),
  ('expression -> expression GREATERTHAN_AND_EQUALITY expression','expression',3,'p_expression_bool','interpreterLanguageLatin.py',157),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','interpreterLanguageLatin.py',175),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','interpreterLanguageLatin.py',176),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','interpreterLanguageLatin.py',177),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','interpreterLanguageLatin.py',178),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','interpreterLanguageLatin.py',240),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','interpreterLanguageLatin.py',245),
  ('expression -> NUMBER','expression',1,'p_expression_number','interpreterLanguageLatin.py',250),
  ('expression -> NAME','expression',1,'p_expression_name','interpreterLanguageLatin.py',255),
]
